const cron = require("node-cron");
const Booking = require("./model/book.model"); // ุชุฃูุฏ ูู ุฃู ุงููุณุงุฑ ุตุญูุญ
const Doctor = require("./model/doctor.model"); // ุชุฃูุฏ ูู ุฃู ุงููุณุงุฑ ุตุญูุญ
const mongoose = require("mongoose");

const updateBookingsForNextWeek = async () => {
    try {
        console.log("๐ ุชุญุฏูุซ ุงูุญุฌูุฒุงุช ููุฃุณุจูุน ุงููุงุฏู...");

        // ุฌูุจ ุฌููุน ุงูุญุฌูุฒุงุช ุงูุชู ุงูุชูู ููุชูุง
        const today = new Date();
        today.setHours(0, 0, 0, 0);

        const expiredBookings = await Booking.find({ date: { $lt: today } });

        for (let booking of expiredBookings) {
            // ุงุญุตู ุนูู ุงูุทุจูุจ ุงููุฑุชุจุท ุจูุฐุง ุงูุญุฌุฒ
            const doctor = await Doctor.findById(booking.doctorId);

            if (doctor) {
                // ุฅุนุงุฏุฉ ูุชุญ ููุณ ุงูููุช ููุฃุณุจูุน ุงููุงุฏู
                const nextWeekDate = new Date(booking.date);
                nextWeekDate.setDate(nextWeekDate.getDate() + 7); // +7 ุฃูุงู

                // ุชุญุฏูุซ ุฌุฏูู ุงูุญุฌูุฒุงุช ุจุฅุถุงูุฉ ููุณ ุงูุชูููุช ููุฃุณุจูุน ุงููุงุฏู
                await Booking.create({
                    doctorId: booking.doctorId,
                    patientId: null, // ูุง ููุฌุฏ ูุฑูุถ ุจุนุฏ
                    date: nextWeekDate,
                    timeSlot: booking.timeSlot,
                    status: "available"
                });

                console.log(`โ ุฅุนุงุฏุฉ ูุชุญ ููุช ${booking.timeSlot} ูููู ${nextWeekDate.toISOString().slice(0, 10)}`);
            }
        }

        console.log("โ ุชู ุชุญุฏูุซ ุงูุญุฌูุฒุงุช ููุฃุณุจูุน ุงููุงุฏู ุจูุฌุงุญ.");
    } catch (error) {
        console.error("โ ุฎุทุฃ ูู ุชุญุฏูุซ ุงูุญุฌูุฒุงุช:", error.message);
    }
};

// ุชุดุบูู ุงููููุฉ ุงููุฌุฏููุฉ ูููููุง ุนูุฏ ููุชุตู ุงูููู
cron.schedule("0 0 * * *", updateBookingsForNextWeek);

module.exports = updateBookingsForNextWeek;
